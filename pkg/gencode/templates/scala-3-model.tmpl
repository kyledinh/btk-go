// Code generated by {{.ModuleName}} (btk-cli) version {{.GenVersion}} 
// DO NOT EDIT. Edit in {{.SpecFile}} {{.SpecVersion}} then rerun generator.

/* UNCOMMENT TO USE, error with the Go Template Parsing... TODO: find better solution, good for demo 
// REVIEW THE TYPES, use SCALA TYPES OVER GO LANG TYPES
// THEN REFORMAT

package app.models 

import zio.*
import zio.json.*

final case class {{.SchemaName}}( 

	{{range .GoSchema.Properties}}{{ (call $.PubFieldName .JsonFieldName) }}: {{ (call $.FilterGoType .Schema.GoType) }},  
	{{end}}
)

object {{.SchemaName}} {

    def make(
        {{range .GoSchema.Properties}}{{ (call $.PubFieldName .JsonFieldName) }}: {{ (call $.FilterGoType .Schema.GoType) }},  
	    {{end}}
    ): UIO[{{.SchemaName}}] =
        {{.SchemaName}}Id.random.map({{.SchemaName}}(_, {{range .GoSchema.Properties}}{{(call $.PubFieldName .JsonFieldName)}}, {{end}}))

    implicit val codec: JsonCodec[{{.SchemaName}}] = 
        DeriveJsonCodec.gen[{{.SchemaName}}]
}

*/

